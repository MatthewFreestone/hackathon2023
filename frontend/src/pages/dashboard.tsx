import HwNavBar from "components/HwNavBar";
import Head from "next/head";
import DatePicker from 'tailwind-datepicker-react'
import { useEffect, useState } from "react";
import axios from "axios";

const Dashboard = () => { 
    const BACKEND_URL = process.env.NEXT_PUBLIC_BACKEND_URL
    const [startDate, setStartDate] = useState<Date>(new Date())
    const [endDate, setEndDate] = useState<Date>(new Date())

    const [showStartDatePicker, setShowStartDatePicker] = useState<boolean>(false)
    const [showEndDatePicker, setShowEndDatePicker] = useState<boolean>(false)

    const [endDateInvalid, setEndDateInvalid] = useState<boolean>(false)

    useEffect(() => {
        if (endDate < startDate) {
            console.log("end date is invalid")
            setEndDateInvalid(true)
        } else {
            
            setEndDateInvalid(false)
        }
    }, [endDate, startDate])

    const datepickerOptions = {
        title: endDateInvalid ? "bg-red-500" : "bg-white",
        autoHide: false,
        todayBtn: true,
        clearBtn: true,
        theme: {
            background: endDateInvalid ? "bg-red-500" : "bg-white",
            // background: "bg-white",
            todayBtn: "",
            clearBtn: "",
            icons: "",
            text: "",
            disabledText: "bg-red-500",
            input: "bg-white",
            inputIcon: "",
            selected: "",
        },
        datepickerClassNames: "top-12",
        // defaultDate: new Date("2022-01-01"),
        language: "en",
    }

    const handleSearch = () => {
        console.log(`searching...${BACKEND_URL}`)
        axios.get(`${BACKEND_URL}`).then((res) => {
            console.log(res.data)
        })
        .catch((err) => {
            console.log(err)
        })
    }

    return (
        <>
            <Head>
                <title>Vacation Planner</title>
                <meta name="description" content="Generated by create next app" />
                <meta name="viewport" content="width=device-width, initial-scale=1" />
                <link rel="icon" href="/favicon.ico" />
            </Head>
            <main className="flex flex-col items-center w-full min-h-screen">
                <HwNavBar />
                <div className="mt-24">
                    <h2 className="text-3xl font-bold tracking-tight text-white-900 sm:text-4xl">
                        I want to take a vacation on...
                    </h2>
                    <div className="mt-2">
                        <DatePicker
                            options={datepickerOptions}
                            value={startDate}
                            onChange={(date) => setStartDate(date)}
                            setShow={(value) => setShowStartDatePicker(value)}
                            show={showStartDatePicker}
                        />
                    </div>
                    <h2 className="text-2xl font-bold tracking-tight text-white-900 sm:text-3xl mt-4">
                        to ...
                    </h2>
                    <div className="mt-2">
                        <DatePicker
                            options={datepickerOptions}
                            value={endDate}
                            onChange={(date) => setEndDate(date)}
                            setShow={(value) => setShowEndDatePicker(value)}
                            show={showEndDatePicker}
                        />
                    </div>
                    <button 
                        className={`rounded-md lg:px-5 lg:py-3 px-3.5 py-1.5 
                            text-base font-semibold leading-7 text-white shadow-sm
                            focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 
                            focus-visible:outline-white mt-4 ${endDateInvalid ? "cursor-not-allowed bg-red-500 border-white border " : " bg-darkBlue  hover:bg-lightBlue "}`}
                        onClick={() => {!endDateInvalid && handleSearch()}}
                    >
                        {endDateInvalid ? "End date must be after start date": "Calculate my work distribution"}
                    </button>
                </div>
            </main>
        </>
    );
    };


export default Dashboard;